{
	"info": {
		"_postman_id": "90ecd80b-1168-443b-a5e3-94da5fa1436e",
		"name": "FOUNDFAVE-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24308684"
	},
	"item": [
		{
			"name": "***** Public Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "checkIfApiOnline (Public)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/test",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "showApiInfo (Public)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/info",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "showAllAvailableQueries (Public)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/queries",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"queries"
					]
				}
			},
			"response": []
		},
		{
			"name": "API documentation (Public)",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/documentation/index.html",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"documentation",
						"index.html"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Authentication Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "Login (Public)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticated",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/authenticated",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authenticated"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Characters Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "getAllCharacters",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCharacterById",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "findCharactersByNameStartingWith",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/search/starting-with?name=vision",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"search",
						"starting-with"
					],
					"query": [
						{
							"key": "name",
							"value": "vision"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findCharactersByNameContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/search/contains?name=vision",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"search",
						"contains"
					],
					"query": [
						{
							"key": "name",
							"value": "vision"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findCharactersByNameSortedAsc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/search/sorted-asc?name=vision",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"search",
						"sorted-asc"
					],
					"query": [
						{
							"key": "name",
							"value": "vision"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findCharactersByNameSortedDesc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/search/sorted-desc?name=vision",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"search",
						"sorted-desc"
					],
					"query": [
						{
							"key": "name",
							"value": "vision"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findCharactersByActorNameContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/search/actor-name?name=robert",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"search",
						"actor-name"
					],
					"query": [
						{
							"key": "name",
							"value": "robert"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updateCharacterById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"characterAliasName\": \"Hulkie\",\r\n    \"characterRealName\": \"Robert Bruce Bannerz\",\r\n    \"characterActorName\": \"Mark Ruffaloz\",\r\n    \"characterTitle\": \"The incredible Hulkz\",\r\n    \"characterGender\": \"Male\",\r\n    \"characterSummary\": \"Exposed to heavy doses of gamma radiation, scientist Bruce Banner transforms into the mean, green rage machine called the Hulkz.\",\r\n    \"characterDescription\": \"Dr. Bruce Banner lives a life caught between the soft-spoken scientist heâ€™s always been and the uncontrollable green monster powered by his rage.z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/character/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"character",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "associateMovieAndCharacter",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/associate/movie/1007",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"associate",
						"movie",
						"1007"
					]
				}
			},
			"response": []
		},
		{
			"name": "createCharacter",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"characterAliasName\": \"She-Hulk\",\r\n    \"characterRealName\": \"Jennifer Walters\",\r\n    \"characterActorName\": \"Tatiana Maslany\",\r\n    \"characterTitle\": \"Savage She-Hulk\",\r\n    \"characterGender\": \"Female\",\r\n    \"characterSummary\": \"Jennifer Walters is a talented lawyer and the cousin of Bruce Banner, the Hulk\",\r\n    \"characterDescription\": \" After being shot by a mobster and seriously injured, she was saved by a blood transfusion from Bruce, and his gamma-irradiated blood mutated Jennifer into the She-Hulk, kicking off her adventuring career.\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteCharacterById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/characters/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "disassociateMovieAndCharacter",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1005\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/characters/disassociate/movie/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"characters",
						"disassociate",
						"movie",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Contact Forms Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "getAllContactForms",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/contactforms",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms"
					]
				}
			},
			"response": []
		},
		{
			"name": "findContactFormsByNameContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/search/name?name=an",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"search",
						"name"
					],
					"query": [
						{
							"key": "name",
							"value": "an"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findContactFormsByEmailContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/search/email?email=novi",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"search",
						"email"
					],
					"query": [
						{
							"key": "email",
							"value": "novi"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findContactFormsByCommentsContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/search/comments?comments=jul",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"search",
						"comments"
					],
					"query": [
						{
							"key": "comments",
							"value": "jul"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getContactFormById",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "createContactForm",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Novi\",\r\n    \"email\": \"test@novi.nl\",\r\n    \"comments\": \"Dit is commentaar\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/post",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteAllContactForms",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/contactforms",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteContactFormById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/contactforms/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"contactforms",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** File Endpoints ******",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "downloadProfileImage",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/download-profile-image/shield-profile.jpg",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"download-profile-image",
						"shield-profile.jpg"
					]
				}
			},
			"response": []
		},
		{
			"name": "downloadCharacterImage",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/download-character-image/hulk-character.jpg",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"download-character-image",
						"hulk-character.jpg"
					]
				}
			},
			"response": []
		},
		{
			"name": "downloadMovieImage",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/download-movie-image/thor-movie.jpg",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"download-movie-image",
						"thor-movie.jpg"
					]
				}
			},
			"response": []
		},
		{
			"name": "uploadProfileImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/Aphelion/Desktop/1-annie-profile-test-image.jpg"
						}
					]
				},
				"url": {
					"raw": "localhost:8080/upload-profile-image/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"upload-profile-image",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "uploadCharacterImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/Aphelion/Desktop/1-annie-character-test-image.jpg"
						}
					]
				},
				"url": {
					"raw": "localhost:8080/upload-character-image/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"upload-character-image",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "uploadMovieImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/Aphelion/Desktop/1-annie-movie-test-image.jpg"
						}
					]
				},
				"url": {
					"raw": "localhost:8080/upload-movie-image/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"upload-movie-image",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteProfileImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/delete-profile-image/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"delete-profile-image",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteCharacterImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/delete-character-image/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"delete-character-image",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteMovieImageById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/delete-movie-image/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"delete-movie-image",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Movies Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "getAllMovies",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/movies",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "getMovieById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/movies/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "findMoviesByTitleStartingWith",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/search/starting-with?title=cap",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"search",
						"starting-with"
					],
					"query": [
						{
							"key": "title",
							"value": "cap"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findMoviesByTitleContains",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/search/contains?title=amer",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"search",
						"contains"
					],
					"query": [
						{
							"key": "title",
							"value": "amer"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findMoviesByTitleSortedAsc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/search/sorted-asc?title=avengers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"search",
						"sorted-asc"
					],
					"query": [
						{
							"key": "title",
							"value": "avengers"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findMoviesByTitleSortedDesc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/search/sorted-desc?title=Avengers",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"search",
						"sorted-desc"
					],
					"query": [
						{
							"key": "title",
							"value": "Avengers"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findMovieByYearOfRelease",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/search/year?year=2008",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"search",
						"year"
					],
					"query": [
						{
							"key": "year",
							"value": "2008"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "updateMovieById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movieTitle\": \"The Incredible Hulk\",\r\n    \"movieSummary\": \"Bruce Banner, a scientist on the run from the U.S. Government, must find a cure for the monster he turns into whenever he loses his temper.\",\r\n    \"movieYearOfRelease\": \"2008\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies/movie/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"movie",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "createMovie",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"movieTitle\": \"The Incredible Hulk\",\r\n    \"movieSummary\": \"Bruce Banner, a scientist on the run from the U.S. Government, must find a cure for the monster he turns into whenever he loses his temper.\",\r\n    \"movieYearOfRelease\": \"2010\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/movies",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteMovieById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/movies/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Profiles Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "getAllProfiles",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "getProfileById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "findProfileByFirstnameContains",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/search/firstname?firstname=p",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"search",
						"firstname"
					],
					"query": [
						{
							"key": "firstname",
							"value": "p"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findProfileByLastNameContains",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/search/lastname?lastname=groot",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"search",
						"lastname"
					],
					"query": [
						{
							"key": "lastname",
							"value": "groot"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getProfileByUsername",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/profile/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"profile",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "getProfileImageByUsername",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/image/user/andre4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"image",
						"user",
						"andre4"
					]
				}
			},
			"response": []
		},
		{
			"name": "getProfileImageByProfileId",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/image/profile/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"image",
						"profile",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateProfileById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"AndrÃ© 2222zz\",\r\n    \"lastName\": \"de Groot 2\",\r\n    \"gender\": \"Male\",\r\n    \"dateOfBirth\": \"28-07-2021\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/profiles/profile/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"profile",
						"1000"
					]
				}
			},
			"response": []
		},
		{
			"name": "createProfile",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"AndrÃ© 4\",\r\n    \"lastName\": \"de Groot\",\r\n    \"gender\": \"Male\",\r\n    \"dateOfBirth\": \"28-07-2010\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/profiles",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteProfileById",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/profiles/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"profiles",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "***** Users Endpoints *****",
			"request": {
				"method": "OPTIONS",
				"header": []
			},
			"response": []
		},
		{
			"name": "getAllUsers",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserByUsername",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "getActiveUsers",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/active",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"active"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllFavoritesFromUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/favorites/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"favorites",
						"andre"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findUserByEmail",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/search?email=admin@foundfave.online",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"search"
					],
					"query": [
						{
							"key": "email",
							"value": "admin@foundfave.online"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findUserByEmailContains",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/search/email?email=admin",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"search",
						"email"
					],
					"query": [
						{
							"key": "email",
							"value": "admin"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "findUserByUsernameContains",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/search/username?username=admin",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"search",
						"username"
					],
					"query": [
						{
							"key": "username",
							"value": "admin"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "doesUserExist",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/exists/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"exists",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserAuthorities",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/andre4/authorities",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"andre4",
						"authorities"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateUserPasswordAdmin (Admin only)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"bAn@nen1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/admin/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"admin",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateUser (User only)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"bAn@nen2\",\r\n    \"apikey\": \"apikey nummer\",\r\n    \"email\": \"andre222@novi.nl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/user/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"user",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "assignProfileToUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/assign/profile/andre4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"assign",
						"profile",
						"andre4"
					]
				}
			},
			"response": []
		},
		{
			"name": "detachProfileFromToUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/detach/profile/andre4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"detach",
						"profile",
						"andre4"
					]
				}
			},
			"response": []
		},
		{
			"name": "addFavoriteCharacterToUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/add/character/andre4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add",
						"character",
						"andre4"
					]
				}
			},
			"response": []
		},
		{
			"name": "createUser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"andre4\",\r\n    \"password\": \"pAssword1@\",\r\n    \"email\": \"andre4@novi.nl\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "addUserAuthority",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"authority\": \"ROLE_ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/andre4/authorities",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"andre4",
						"authorities"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"andre"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeAuthority",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/andre4/authorities/ROLE_ADMIN",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"andre4",
						"authorities",
						"ROLE_ADMIN"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeFavoriteCharacterFromUser",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{NoviToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/remove/character/andre",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"remove",
						"character",
						"andre"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "NoviToken",
			"value": "",
			"type": "string"
		}
	]
}